---
import BaseLayout from '../../layouts/BaseLayout.astro';

const s3_URL = 'https://assets.rayhan.id/';

const photos = [
  {
    id: 28,
    src: `${s3_URL}HCL_8.jpg`,
    thumb: `${s3_URL}HCL_8.webp`,
    title: 'University of Indonesia',
    description: 'Taken during a visit to the University of Indonesia, around April 2025',
    date: '2024',
    location: 'Depok',
    category: 'analog',
    exif: {
      camera: 'Kodak Ultra F9',
      lens: 'N/A',
      aperture: 'f/9',
      shutter: '1/100s',
      iso: 'ISO 200',
      focal: '35mm',
      Film: 'Kodak ColorPlus 200',
    }
  },
  {
    id: 8,
    src: `${s3_URL}HCL_13 (1).jpg`,
    thumb: `${s3_URL}HCL_13 (1).webp`,
    title: 'Panico Eating His Food',
    description: 'Memory of my beloved cat in Bandung.',
    date: '2025',
    location: 'Bandung',
    category: 'analog'
  },
  {
    id: 9,
    src: `${s3_URL}analog.jpg`,
    thumb: `${s3_URL}analog.webp`,
    title: 'Labtek V Parking Lot',
    description: 'Taken with Kodak Ultra F9 with Fujicolor C200',
    date: '2025',
    location: 'Bandung',
    category: 'analog'
  },
  {
    id: 10,
    src: `${s3_URL}HCL_9.jpg`,
    thumb: `${s3_URL}HCL_9.webp`,  
    title: 'HMIF ITB at ITB April Graduation Ceremony',
    description: 'Taken during the ITB April Graduation Ceremony with Kodak Ultra F9',
    date: '2025',
    location: 'Bandung',
    category: 'analog'
  },
  {
    id: 11,
    src: `${s3_URL}esp32_1.gif`,
    thumb: `${s3_URL}esp32_1.gif`,
    title: 'Prototyping with ESP32',
    description: 'Animated demonstration of an ESP32 microcontroller',
    date: '2023',
    location: 'Bandung',
    category: 'digital'
  },
  {
    id: 13,
    src: `${s3_URL}intro1v2-min.jpg`,
    thumb: `${s3_URL}intro1v2-min.webp`,
    title: 'Yovie & Nuno Performing at Balai Kartini',
    description: 'Taken during the Yovie & Nuno performance at Balai Kartini for SIXTORWS 2019',
    date: '2019',
    location: 'Jakarta',
    category: 'digital'
  },
  {
    id: 14,
    src: `${s3_URL}intro2v2-min.jpg`,
    thumb: `${s3_URL}intro2v2-min.webp`,
    title: 'Random Shell Gas Station',
    description: 'Taken somewhere in East Jakarta',
    date: '2019',
    location: 'Jakarta',
    category: 'digital'
  },
  {
    id: 17,
    src: `${s3_URL}intro5v2-min.jpg`,
    thumb: `${s3_URL}intro5v2-min.webp`,
    title: 'East Jakarta DBL Performance',
    description: 'Taken in GOR Soemantri with Olympus OM-1',
    date: '2019',
    location: 'Jakarta',
    category: 'digital'
  },
  {
    id: 23,
    src: 'https://www.youtube.com/watch?v=gFUsewJtqW0', 
    thumb: 'https://img.youtube.com/vi/gFUsewJtqW0/maxresdefault.jpg', 
    title: 'Dari 21, untuk 21',
    date: '2022',
    location: 'Jakarta',
    category: 'video',
    type: 'video',
    duration: '3:32'
  },
  {
    id: 21,
    src: 'https://www.youtube.com/watch?v=3bno3ptfoKM', 
    thumb: 'https://img.youtube.com/vi/3bno3ptfoKM/maxresdefault.jpg', 
    title: 'AFTERMOVIE OSKM ITB 2022 - HALATERRA: A FLOURISHING ODYSSEY',
    date: '2022',
    location: 'Bandung',
    category: 'video',
    type: 'video',
    duration: '5:47'
  },
  {
    id: 22,
    src: 'https://www.youtube.com/watch?v=2PrdbASpFcc', 
    thumb: 'https://img.youtube.com/vi/2PrdbASpFcc/maxresdefault.jpg',
    title: 'AFTERMOVIE OSKM & ITB SHOWCASE 2023',
    date: '2023',
    location: 'Bandung',
    category: 'video',
    type: 'video',
    duration: '5:47'
  },
  {
    id: 23,
    src: `${s3_URL}leaf.jpg`,
    thumb: `${s3_URL}leaf.webp`,
    title: 'Random Leaf',
    description: 'Taken near my kost with Minolta SRT101 - Kodak 400TX',
    date: '2025',
    location: 'Bandung',
    category: 'analog'
  },
  {
    id: 24,
    src: `${s3_URL}perpus.jpg`,
    thumb: `${s3_URL}perpus.webp`,
    title: 'Bandung Institute of Technology Main Library',
    description: 'Taken with Minolta SRT101 - Kodak 400TX',
    date: '2025',
    location: 'Bandung',
    category: 'analog'
  },
  {
    id: 25,
    src: `${s3_URL}cats.jpg`,
    thumb: `${s3_URL}cats.webp`,
    title: 'Nunito Kittens Near Labtek V',
    description: 'Taken with Minolta SRT101 - Kodak 400TX',
    date: '2025',
    location: 'Bandung',
    category: 'analog'
  },
  {
    id: 26,
    src: `${s3_URL}borma.jpg`,
    thumb: `${s3_URL}borma.webp`,
    title: 'Borma Dago in the Morning',
    description: 'Taken with Minolta SRT101 - Kodak 400TX',
    date: '2025',
    location: 'Bandung',
    category: 'analog'
  },
  {
    id: 27,
    src: `${s3_URL}oskm.jpg`,
    thumb: `${s3_URL}oskm.webp`,
    title: 'OSKM 2023 Crew Getting Ready',
    description: 'Taken with Lumix GH5',
    date: '2023',
    location: 'Bandung',
    category: 'digital'
  },
  {
    id: 7,
    src: `${s3_URL}oskm2.jpg`,
    thumb: `${s3_URL}oskm2.webp`,
    title: 'Ceremony During OSKM 2023',
    description: 'Taken with Lumix GH5',
    date: '2023',
    location: 'Bandung',
    category: 'digital'
  },
  
];

const categories = [
  { key: 'all', label: 'All Media', count: photos.length },
  { key: 'analog', label: 'Analog', count: photos.filter(p => p.category === 'analog').length },
  { key: 'digital', label: 'Digital', count: photos.filter(p => p.category === 'digital').length },
  { key: 'video', label: 'Video', count: photos.filter(p => p.category === 'video').length }
].filter(category => category.count > 0 || category.key === 'all');
---

<BaseLayout title="Gallery – Rayhan M" currentPage="/gallery">
  <!-- lightGallery CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/lightgallery@2.7.2/css/lightgallery.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/lightgallery@2.7.2/css/lg-zoom.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/lightgallery@2.7.2/css/lg-thumbnail.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/lightgallery@2.7.2/css/lg-autoplay.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/lightgallery@2.7.2/css/lg-fullscreen.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/lightgallery@2.7.2/css/lg-video.css" />

  <style>
    .gallery-header {
      text-align: left;
      margin: 8rem 0 4rem 0;
      max-width: 1600px;
      margin-left: auto;
      margin-right: auto;
      padding: 0 2rem;
    }

    .gallery-header h1 {
      font-size: 5.5rem;
      line-height: 1.1;
      margin-bottom: 1rem;
      font-weight: 300;
      color: #9b9b9b;
    }

    .gallery-header h1 .highlight {
      font-weight: 700;
      color: #000;
    }

    .gallery-header p {
      font-size: 1.8rem;
      color: #666;
      margin-bottom: 2rem;
      line-height: 1.4;
    }

    .gallery-divider {
      width: 100%;
      height: 1px;
      background: #ddd;
      margin: 3rem auto;
      max-width: 1600px;
    }


    .filter-controls {
      display: flex;
      justify-content: center;
      gap: 1rem;
      margin: 3rem 0 2rem 0;
      flex-wrap: wrap;
      padding: 0 1rem;
    }

    .filter-btn {
      padding: 0.6rem 1.5rem;
      border: 2px solid #ddd;
      background: white;
      border-radius: 25px;
      cursor: pointer;
      transition: all 0.3s ease;
      font-size: 0.9rem;
      font-weight: 500;
      color: #666;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .filter-btn:hover,
    .filter-btn.active {
      border-color: #6b8e6b;
      background: #6b8e6b;
      color: white;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(107, 142, 107, 0.3);
    }

    .filter-count {
      padding: 0.2rem 0.5rem;
      border-radius: 12px;
      font-size: 0.8rem;
    }

    .gallery-container {
      max-width: 1600px;
      margin: 0 auto;
      margin-top: 10rem;
      padding: 0 2rem;
    }

    .gallery-grid {
      column-count: 4;
      column-gap: 1rem;
      margin: 2rem 0 4rem 0;
    }

    .gallery-item {
      position: relative;
      break-inside: avoid;
      margin-bottom: 1rem;
      border-radius: 0;
      overflow: hidden;
      background: white;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      cursor: pointer;
      display: inline-block;
      width: 100%;
    }

    .gallery-item:hover {
      transform: translateY(-8px) scale(1.02);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
      z-index: 10;
    }

    .gallery-item img {
      width: 100%;
      height: auto;
      display: block;
      transition: all 0.4s ease;
    }

    .gallery-item:hover img {
      transform: scale(1.05);
    }

    .gallery-item:nth-child(1) img { aspect-ratio: 3/4; object-fit: cover; }
    .gallery-item:nth-child(2) img { aspect-ratio: 4/5; object-fit: cover; }
    .gallery-item:nth-child(3) img { aspect-ratio: 1/1; object-fit: cover; }
    .gallery-item:nth-child(4) img { aspect-ratio: 3/2; object-fit: cover; }
    .gallery-item:nth-child(5) img { aspect-ratio: 4/3; object-fit: cover; }
    .gallery-item:nth-child(6) img { aspect-ratio: 2/3; object-fit: cover; }
    .gallery-item:nth-child(7) img { aspect-ratio: 5/4; object-fit: cover; }
    .gallery-item:nth-child(8) img { aspect-ratio: 3/4; object-fit: cover; }
    .gallery-item:nth-child(9) img { aspect-ratio: 16/9; object-fit: cover; }
    .gallery-item:nth-child(10) img { aspect-ratio: 4/5; object-fit: cover; }

    .gallery-overlay {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      background: linear-gradient(transparent, rgba(0, 0, 0, 0.9));
      color: white;
      padding: 2rem 1.5rem 1.5rem;
      transform: translateY(100%);
      transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      backdrop-filter: blur(3px);
    }

    .gallery-item:hover .gallery-overlay {
      transform: translateY(0);
    }

    .gallery-item {
      cursor: pointer;
      position: relative;
    }

    .gallery-item::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0, 0, 0, 0);
      transition: background 0.3s ease;
      pointer-events: none;
      z-index: 2;
    }

    .gallery-item:hover::after {
      background: rgba(0, 0, 0, 0.1);
    }

    .gallery-item:active {
      transform: translateY(-6px) scale(1.015);
    }

    .gallery-item {
      opacity: 0;
      animation: fadeInUp 0.6s ease forwards;
    }

    .gallery-item img {
      opacity: 0;
      transition: opacity 0.4s ease;
    }

    .gallery-item img.loaded {
      opacity: 1;
    }

    .gallery-item::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
      background-size: 200% 100%;
      animation: shimmer 1.5s infinite;
      z-index: 1;
    }

    .gallery-item img.loaded + .gallery-item::before,
    .gallery-item.image-loaded::before {
      display: none;
    }

    @keyframes shimmer {
      0% { background-position: -200% 0; }
      100% { background-position: 200% 0; }
    }

    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .gallery-item:nth-child(1) { animation-delay: 0.1s; }
    .gallery-item:nth-child(2) { animation-delay: 0.2s; }
    .gallery-item:nth-child(3) { animation-delay: 0.3s; }
    .gallery-item:nth-child(4) { animation-delay: 0.4s; }
    .gallery-item:nth-child(5) { animation-delay: 0.5s; }
    .gallery-item:nth-child(6) { animation-delay: 0.6s; }
    .gallery-item:nth-child(7) { animation-delay: 0.7s; }
    .gallery-item:nth-child(8) { animation-delay: 0.8s; }
    .gallery-item:nth-child(9) { animation-delay: 0.9s; }
    .gallery-item:nth-child(10) { animation-delay: 1.0s; }

    .overlay-title {
      font-size: 1.3rem;
      font-weight: bold;
      margin-bottom: 0.2rem;
    }

    .overlay-description {
      font-size: 1.1rem;
      opacity: 0.9;
      margin-bottom: 0.5rem;
      line-height: 1.4;
    }

    .overlay-meta {
      display: flex;
      justify-content: space-between;
      align-items: center;
      font-size: 1rem;
      opacity: 0.8;
    }

    .overlay-date {
      display: flex;
      align-items: center;
      gap: 0.3rem;
    }

    .overlay-location {
      display: flex;
      align-items: center;
      gap: 0.3rem;
    }


    @media (max-width: 1200px) {
      .gallery-grid {
        column-count: 3;
        column-gap: 0.8rem;
      }
    }

    @media (max-width: 900px) {
      .gallery-grid {
        column-count: 2;
        column-gap: 0.8rem;
      }
    }

    @media (max-width: 768px) {
      .gallery-header h1 {
        font-size: 3.5rem;
      }
      
      .gallery-header p {
        font-size: 1.5rem;
      }

      .gallery-grid {
        column-count: 1;
        column-gap: 0;
      }

      .gallery-container {
        padding: 0 1rem;
      }

      .gallery-item {
        margin-bottom: 1.5rem;
        border-radius: 0;
      }

      .filter-controls {
        gap: 0.5rem;
      }

      .filter-btn {
        padding: 0.5rem 1rem;
        font-size: 0.8rem;
      }

      .gallery-item:nth-child(n) img {
        aspect-ratio: unset;
        height: auto;
      }
    }

    .gallery-item.video-item {
      position: relative;
    }

    .gallery-item.video-item::before {
      content: '▶';
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: 3rem;
      color: white;
      z-index: 3;
      text-shadow: 0 2px 10px rgba(0, 0, 0, 0.7);
      transition: all 0.3s ease;
    }

    .gallery-item.video-item:hover::before {
      font-size: 3.5rem;
      text-shadow: 0 4px 20px rgba(0, 0, 0, 0.9);
    }

    .video-overlay-indicator {
      position: absolute;
      top: 1rem;
      right: 1rem;
      background: rgba(0, 0, 0, 0.7);
      color: white;
      padding: 0.3rem 0.8rem;
      border-radius: 15px;
      font-size: 0.9rem;
      font-weight: 500;
      z-index: 3;
    }

    .lg-backdrop {
      background-color: rgba(0, 0, 0, 0.95);
    }

    .lg-toolbar {
      background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), transparent);
    }

    .lg-thumb-outer {
      background-color: rgba(0, 0, 0, 0.8);
    }

    /* EXIF Data Styling */
    .lg-sub-html {
      max-width: 600px;
      margin: 0 auto;
    }

    .lg-sub-html h4 {
      font-size: 1.3rem;
      margin-bottom: 0.5rem;
      color: white;
    }

    .lg-sub-html p {
      font-size: 1rem;
      opacity: 0.9;
      line-height: 1.4;
      margin-bottom: 0;
    }

    .lg-sub-html h5 {
      color: white;
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .exif-toggle {
      width: 100%;
      text-align: left;
      font-weight: 600;
    }

    .exif-toggle:hover {
      opacity: 1 !important;
    }

    .exif-toggle:focus {
      outline: 2px solid rgba(255, 255, 255, 0.3);
      outline-offset: 2px;
    }

    .exif-content {
      animation: slideDown 0.3s ease;
    }

    @keyframes slideDown {
      from {
        opacity: 0;
        transform: translateY(-10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @media (max-width: 768px) {
      .lg-sub-html [style*="grid-template-columns"] {
        grid-template-columns: repeat(2, 1fr) !important;
        gap: 0.8rem !important;
        font-size: 0.9rem !important;
      }
      
      .lg-sub-html h5 {
        font-size: 1rem !important;
      }
    }

    footer {
      margin-top: 4rem;
      text-align: center;
      font-size: 1.4rem;
      color: #999;
    }

    .footer-content {
      max-width: 1400px;
      margin: 0 auto;
      padding: 0 2rem;
    }

    .blog-divider {
      height: 1px;
      background: linear-gradient(to right, #ddd, #ccc, #ddd);
      margin: 2.5rem 0;
      border-radius: 1px;
      opacity: 0.9;
    }
  </style>

  <div class="gallery-container">
    <div class="gallery-header" style="text-align: center;">
      <h1>Discover my 📁<span class="highlight">visual archive</span> featuring <span class="highlight" id="photo-counter">{photos.length}</span> photos & </br> videos blending life's journey & artistic endeavors.</h1>
    </div>
    
    <div class="gallery-divider"></div>

    <div class="filter-controls">
      {categories.map((category) => (
        <button 
          class={`filter-btn ${category.key === 'all' ? 'active' : ''}`}
          data-filter={category.key}
        >
          {category.label}
          <span class="filter-count">{category.count}</span>
        </button>
      ))}
    </div>

    <!-- lightGallery container -->
    <div class="gallery-grid" id="lightgallery">
      {photos.map((photo) => (
         <div 
           class={`gallery-item ${photo.type === 'video' ? 'video-item' : ''}`}
           data-src={photo.src}
           data-lg-size="1200-800"
           data-category={photo.category}
           data-sub-html={`
             <div class="lg-sub-html">
               <h4>${photo.title}</h4>
               <p>${photo.description}</p>
               <div style="display: flex; justify-content: space-between; margin-top: 1rem; font-size: 0.9rem; opacity: 0.8;">
                 <span><i class="fas fa-calendar"></i> ${photo.date}</span>
                 <span><i class="fas fa-map-marker-alt"></i> ${photo.location}</span>
                 ${photo.duration ? `<span><i class="fas fa-clock"></i> ${photo.duration}</span>` : ''}
               </div>
               ${photo.exif ? `
                 <div style="margin-top: 1.5rem; padding-top: 1rem; border-top: 1px solid rgba(255,255,255,0.2);">
                   <button class="exif-toggle" style="background: none; border: none; color: white; font-size: 1.1rem; cursor: pointer; display: flex; align-items: center; gap: 0.5rem; padding: 0.5rem 0; opacity: 0.9; transition: opacity 0.3s ease;">
                     📷 <span>Camera Details</span> <span class="exif-arrow" style="transition: transform 0.3s ease;">▼</span>
                   </button>
                   <div class="exif-content" style="display: none; margin-top: 0.8rem;">
                     <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(160px, 1fr)); gap: 1.2rem; font-size: 1.1rem; line-height: 1.5;">
                       <div><strong>Camera:</strong><br/>${photo.exif.camera}</div>
                       <div><strong>Lens:</strong><br/>${photo.exif.lens}</div>
                       <div><strong>Aperture:</strong><br/>${photo.exif.aperture}</div>
                       <div><strong>Shutter:</strong><br/>${photo.exif.shutter}</div>
                       <div><strong>ISO:</strong><br/>${photo.exif.iso}</div>
                       <div><strong>Focal:</strong><br/>${photo.exif.focal}</div>
                     </div>
                   </div>
                 </div>
               ` : ''}
             </div>
           `}
         >
          {photo.type === 'video' && photo.duration && (
            <div class="video-overlay-indicator">
              <i class="fas fa-play"></i> {photo.duration}
            </div>
          )}
          <img 
            src={photo.thumb || photo.src}
            alt={photo.title}
            loading="lazy"
          />
          <div class="gallery-overlay">
            <div class="overlay-title">{photo.title}</div>
                          <div class="overlay-meta">
                <div class="overlay-date">
                  <i class="fas fa-calendar"></i>
                  {photo.date}
                </div>
              <div class="overlay-location">
                <i class="fas fa-map-marker-alt"></i>
                {photo.location}
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>

  <footer>
    <div class="footer-content">
      <div class="blog-divider"></div>

      <div style="display: flex; flex-direction: column; align-items: center; gap: 0.8rem; margin-top: 4rem;">
        <nav style="display: flex; gap: 1rem; flex-wrap: wrap; justify-content: center; font-size: 1.4rem;">
          <a href="/" style="text-decoration: none; color: inherit;">Home</a>
          <a href="/about-me" style="text-decoration: none; color: inherit;">About</a>
          <a href="/blog" style="text-decoration: none; color: inherit;">Blog</a>
          <a href="/gallery" style="text-decoration: none; color: inherit;">Gallery</a>
          <a href="/gallery" style="text-decoration: none; color: inherit;">Gallery</a>
          <a href="/contact" style="text-decoration: none; color: inherit;">Contact</a>
        </nav>

        <div style="font-size: 1.4rem; color: #777;">
          © {new Date().getFullYear()} Rayhan Maheswara Pramanda
        </div>

        <div style="display: flex; gap: 1rem; justify-content: center; font-size: 1.6rem;">
          <a href="https://github.com/rayhanmp" target="_blank" rel="noopener" aria-label="GitHub">
            <i class="fab fa-github"></i>
          </a>
          <a href="https://linkedin.com/in/rayhanmp" target="_blank" rel="noopener" aria-label="LinkedIn">
            <i class="fab fa-linkedin"></i>
          </a>
          <a href="mailto:mail@rayhan.id" aria-label="Email">
            <i class="fas fa-envelope"></i>
          </a>
        </div>

        <div style="margin-top: 1rem;">
          <a href="#" style="font-size: 1.2rem; color: #aaa; text-decoration: underline;">Back to top ↑</a>
        </div>
      </div>
    </div>
  </footer>

  <!-- lightGallery JavaScript -->
  <script src="https://cdn.jsdelivr.net/npm/lightgallery@2.7.2/lightgallery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/lightgallery@2.7.2/plugins/zoom/lg-zoom.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/lightgallery@2.7.2/plugins/thumbnail/lg-thumbnail.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/lightgallery@2.7.2/plugins/autoplay/lg-autoplay.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/lightgallery@2.7.2/plugins/fullscreen/lg-fullscreen.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/lightgallery@2.7.2/plugins/share/lg-share.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/lightgallery@2.7.2/plugins/video/lg-video.min.js"></script>

  <script is:inline>
    let lightGalleryInstance = null;

    function initializeGallery() {
      // Clean up existing instance
      if (lightGalleryInstance) {
        lightGalleryInstance.destroy();
        lightGalleryInstance = null;
      }

      // Wait for lightGallery to be available
      if (typeof window.lightGallery === 'undefined') {
        setTimeout(initializeGallery, 100);
        return;
      }

      const galleryElement = document.getElementById('lightgallery');
      if (!galleryElement) {
        setTimeout(initializeGallery, 100);
        return;
      }

      // Initialize lightGallery
      lightGalleryInstance = window.lightGallery(galleryElement, {
        plugins: [lgZoom, lgThumbnail, lgAutoplay, lgFullscreen, lgShare, lgVideo],
        speed: 500,
        thumbnail: true,
        animateThumb: true,
        zoomFromOrigin: false,
        allowMediaOverlap: true,
        toggleThumb: true,
        download: false,
        counter: true,
        closable: true,
        swipeThreshold: 50,
        enableSwipe: true,
        enableDrag: true,
        loop: true,
        zoom: true,
        actualSize: false,
        showZoomInOutIcons: true,
        autoplay: false,
        pause: 3000,
        progressBar: true,
        fourceAutoplay: false,
        autoplayControls: true,
        share: false,
        fullScreen: true,
        mobileSettings: {
          controls: false,
          showCloseIcon: true,
          download: false,
          rotate: false
        }
      });

      setupImageLoading();
      setupFilters();
      setupAnimations();
    }

    function setupExifToggle() {
      document.addEventListener('click', function(e) {
        if (e.target.closest('.exif-toggle')) {
          e.preventDefault();
          e.stopPropagation();
          
          const toggle = e.target.closest('.exif-toggle');
          const content = toggle.nextElementSibling;
          const arrow = toggle.querySelector('.exif-arrow');
          
          if (content && arrow) {
            if (content.style.display === 'none' || content.style.display === '') {
              content.style.display = 'block';
              arrow.style.transform = 'rotate(180deg)';
              toggle.style.opacity = '1';
            } else {
              content.style.display = 'none';
              arrow.style.transform = 'rotate(0deg)';
              toggle.style.opacity = '0.9';
            }
          }
        }
      });
    }

    function setupFilters() {
      const filterBtns = document.querySelectorAll('.filter-btn');
      const galleryItems = document.querySelectorAll('.gallery-item');

      filterBtns.forEach(btn => {
        btn.addEventListener('click', function() {
          const filter = this.dataset.filter;
          
          filterBtns.forEach(b => b.classList.remove('active'));
          this.classList.add('active');

          galleryItems.forEach((item, index) => {
            const category = item.dataset.category;
            const isVideo = item.classList.contains('video-item');
            
            let shouldShow = false;
            if (filter === 'all') {
              shouldShow = true;
            } else if (filter === 'video') {
              shouldShow = isVideo;
            } else {
              shouldShow = category === filter;
            }
            
            if (shouldShow) {
              item.style.display = '';
              item.style.transform = 'translateY(20px)';
              item.style.opacity = '0';
              setTimeout(() => {
                item.style.transform = 'translateY(0)';
                item.style.opacity = '1';
              }, index * 50 + 100);
            } else {
              item.style.opacity = '0';
              item.style.transform = 'translateY(-20px)';
              setTimeout(() => {
                item.style.display = 'none';
              }, 300);
            }
          });

          if (lightGalleryInstance) {
            lightGalleryInstance.refresh();
          }
        });
      });
    }

    function setupImageLoading() {
      const images = document.querySelectorAll('.gallery-item img');
      images.forEach((img, index) => {
        if (img.complete) {
          img.classList.add('loaded');
          img.parentElement.classList.add('image-loaded');
        } else {
          img.addEventListener('load', function() {
            this.classList.add('loaded');
            this.parentElement.classList.add('image-loaded');
          });
        }
      });
    }

    function setupAnimations() {
      // Wait a bit to ensure anime.js is loaded and elements are ready
      setTimeout(() => {
        if (typeof anime !== 'undefined') {
          // Animate photo counter
          const photoCounter = document.getElementById('photo-counter');
          if (photoCounter && !photoCounter.dataset.animated) {
            const finalCount = parseInt(photoCounter.textContent);
            photoCounter.textContent = '0';
            photoCounter.dataset.animated = 'true';

            anime({
              targets: photoCounter,
              innerHTML: [0, finalCount],
              duration: 2500,
              round: 1,
              easing: 'easeOutExpo',
              delay: 500
            });
          }

          // Reset gallery items for animation
          const galleryItems = document.querySelectorAll('.gallery-item');
          galleryItems.forEach(item => {
            item.style.opacity = '0';
            item.style.transform = 'translateY(30px)';
          });

          anime({
            targets: '.gallery-item',
            opacity: [0, 1],
            translateY: [30, 0],
            delay: anime.stagger(100, {start: 1200}),
            duration: 800,
            easing: 'easeOutQuad'
          });
        } else {
          // Fallback if anime.js isn't loaded
          const photoCounter = document.getElementById('photo-counter');
          if (photoCounter && !photoCounter.dataset.animated) {
            photoCounter.dataset.animated = 'true';
            // Simple counter without animation
            // Counter is already set in HTML, so just mark as animated
          }
          
          // Show gallery items without animation
          const galleryItems = document.querySelectorAll('.gallery-item');
          galleryItems.forEach(item => {
            item.style.opacity = '1';
            item.style.transform = 'translateY(0)';
          });
        }
      }, 100);
    }

    // Initialize on both DOMContentLoaded and astro:page-load
    function init() {
      initializeGallery();
      setupExifToggle();
    }

    // Support both regular page loads and ViewTransitions
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', init);
    } else {
      init();
    }

    // Support ViewTransitions
    document.addEventListener('astro:page-load', init);

    // Cleanup when leaving the page
    document.addEventListener('astro:before-preparation', () => {
      if (lightGalleryInstance) {
        lightGalleryInstance.destroy();
        lightGalleryInstance = null;
      }
      
      // Reset counter animation state for next visit
      const photoCounter = document.getElementById('photo-counter');
      if (photoCounter) {
        photoCounter.removeAttribute('data-animated');
      }
    });
  </script>
</BaseLayout>