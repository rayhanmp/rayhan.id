---
interface Props {
  threshold?: number;
}

const { threshold = 300 } = Astro.props;
---

<button id="jumpToTop" class="back-to-top-button">
  <a href="#">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640" width="32" height="32" fill="currentColor">
      <path d="M300.3 199.2C312.9 188.9 331.4 189.7 343.1 201.4L471.1 329.4C480.3 338.6 483 352.3 478 364.3C473 376.3 461.4 384 448.5 384L192.5 384C179.6 384 167.9 376.2 162.9 364.2C157.9 352.2 160.7 338.5 169.9 329.4L297.9 201.4L300.3 199.2z"/>
    </svg>
  </a>
</button>

<script define:vars={{ threshold }}>
  const jumpToTopButton = document.getElementById('jumpToTop');

  function handleScroll() {
    if (!jumpToTopButton) return;

    if (window.scrollY > threshold) {
      jumpToTopButton.style.opacity = '1';
    } else {
      jumpToTopButton.style.opacity = '0';
    }
  }

  window.addEventListener('scroll', handleScroll);

  if (jumpToTopButton) {
    jumpToTopButton.addEventListener('click', function(e) {
      e.preventDefault();
      window.scrollTo({
        top: 0,
        behavior: 'smooth'
      });
    });
  }
</script>

<style>
  .back-to-top-button {
    background-color: #222;
    position: fixed;
    z-index: 100;
    right: 3rem;
    bottom: 3rem;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    padding: 0.5rem 2.5rem;
    height: 40px;
  }

  .back-to-top-button a {
    color: #fff;
    text-decoration: none;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .back-to-top-button:hover {
    background-color: #333;
  }

  @media (max-width: 768px) {
    .back-to-top-button {
      right: 1.5rem;
      bottom: 1.5rem;
    }
  }
</style>
